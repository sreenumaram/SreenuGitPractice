<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="17" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-19T17:16:47 IST" name="Surefire suite" finished-at="2024-06-19T17:17:17 IST" duration-ms="30068">
    <groups>
    </groups>
    <test started-at="2024-06-19T17:16:47 IST" name="Surefire test" finished-at="2024-06-19T17:17:17 IST" duration-ms="30068">
      <class name="TestNGPracticeTests.ExcelDataProviderTest">
        <test-method signature="printUserCerds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.ExcelDataProviderTest@124c278f]" started-at="2024-06-19T17:16:48 IST" name="printUserCerds" data-provider="userCredentials" finished-at="2024-06-19T17:16:48 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[User1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User@111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printUserCerds -->
        <test-method signature="printUserCerds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.ExcelDataProviderTest@124c278f]" started-at="2024-06-19T17:16:48 IST" name="printUserCerds" data-provider="userCredentials" finished-at="2024-06-19T17:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[User2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User@222]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printUserCerds -->
        <test-method signature="printUserCerds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.ExcelDataProviderTest@124c278f]" started-at="2024-06-19T17:16:48 IST" name="printUserCerds" data-provider="userCredentials" finished-at="2024-06-19T17:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[User3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User@333]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printUserCerds -->
        <test-method signature="printUserCerds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.ExcelDataProviderTest@124c278f]" started-at="2024-06-19T17:16:48 IST" name="printUserCerds" data-provider="userCredentials" finished-at="2024-06-19T17:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[User4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[User@444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printUserCerds -->
        <test-method signature="printUserCerds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.ExcelDataProviderTest@124c278f]" started-at="2024-06-19T17:16:48 IST" name="printUserCerds" data-provider="userCredentials" finished-at="2024-06-19T17:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[121]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printUserCerds -->
      </class> <!-- TestNGPracticeTests.ExcelDataProviderTest -->
      <class name="TestNGPracticeTests.SecondTest">
        <test-method signature="test1()[pri:0, instance:TestNGPracticeTests.SecondTest@15b204a1]" started-at="2024-06-19T17:16:48 IST" name="test1" finished-at="2024-06-19T17:16:56 IST" duration-ms="8133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:TestNGPracticeTests.SecondTest@15b204a1]" started-at="2024-06-19T17:16:56 IST" name="test2" finished-at="2024-06-19T17:17:09 IST" duration-ms="12968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test3()[pri:0, instance:TestNGPracticeTests.SecondTest@15b204a1]" started-at="2024-06-19T17:17:09 IST" name="test3" finished-at="2024-06-19T17:17:16 IST" duration-ms="6609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- TestNGPracticeTests.SecondTest -->
      <class name="TestNGPracticeTests.TestListener">
        <test-method signature="test1()[pri:0, instance:TestNGPracticeTests.TestListener@1fe20588]" started-at="2024-06-19T17:17:16 IST" name="test1" finished-at="2024-06-19T17:17:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:TestNGPracticeTests.TestListener@1fe20588]" started-at="2024-06-19T17:17:16 IST" name="test2" finished-at="2024-06-19T17:17:17 IST" duration-ms="1011" status="FAIL">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method TestNGPracticeTests.TestListener.test2() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method TestNGPracticeTests.TestListener.test2() didn't finish within the time-out 1000
at org.testng.internal.MethodInvocationHelper.invokeWithTimeoutWithNewExecutor(MethodInvocationHelper.java:371)
at org.testng.internal.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:282)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:605)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test3()[pri:0, instance:TestNGPracticeTests.TestListener@1fe20588]" started-at="2024-06-19T17:17:17 IST" name="test3" finished-at="2024-06-19T17:17:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- TestNGPracticeTests.TestListener -->
      <class name="TestNGPracticeTests.TestngAnnotationsTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:16:47 IST" name="beforeSuite" finished-at="2024-06-19T17:16:47 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:16:47 IST" name="beforeTest" finished-at="2024-06-19T17:16:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="beforeClass" finished-at="2024-06-19T17:17:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="beforeMethod" finished-at="2024-06-19T17:17:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="test" finished-at="2024-06-19T17:17:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="afterClass" finished-at="2024-06-19T17:17:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="afterMethod" finished-at="2024-06-19T17:17:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="afterTest" finished-at="2024-06-19T17:17:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:TestNGPracticeTests.TestngAnnotationsTest@61dd025]" started-at="2024-06-19T17:17:17 IST" name="afterSuite" finished-at="2024-06-19T17:17:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestNGPracticeTests.TestngAnnotationsTest -->
      <class name="TestNGPracticeTests.TestDataProvider1">
        <test-method signature="userCreds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.TestDataProvider1@77167fb7]" started-at="2024-06-19T17:17:16 IST" name="userCreds" data-provider="creds" finished-at="2024-06-19T17:17:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc@1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCreds -->
        <test-method signature="userCreds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.TestDataProvider1@77167fb7]" started-at="2024-06-19T17:17:16 IST" name="userCreds" data-provider="creds" finished-at="2024-06-19T17:17:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fgh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fgh@3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCreds -->
        <test-method signature="userCreds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.TestDataProvider1@77167fb7]" started-at="2024-06-19T17:17:16 IST" name="userCreds" data-provider="creds" finished-at="2024-06-19T17:17:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cde]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Cde@2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCreds -->
        <test-method signature="userCreds(java.lang.String, java.lang.String)[pri:0, instance:TestNGPracticeTests.TestDataProvider1@77167fb7]" started-at="2024-06-19T17:17:16 IST" name="userCreds" data-provider="creds" finished-at="2024-06-19T17:17:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ijk]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ijk@4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCreds -->
      </class> <!-- TestNGPracticeTests.TestDataProvider1 -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
